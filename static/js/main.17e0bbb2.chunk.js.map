{"version":3,"sources":["component/Card/card.component.jsx","component/cardlist/card-list.component.jsx","component/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","svc","id","name","href","email","Cardlist","services","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchfield","target","value","state","fetch","then","response","json","users","this","searchstate","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAO,SAACC,GACjB,OACA,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,MAAMC,IAAG,+BAA0BH,EAAMI,IAAIC,GAApC,4BAClB,6BAAKL,EAAMI,IAAIE,OACf,mBAAGC,KAAK,oBAAR,SAA6BP,EAAMI,IAAII,aCJlCC,G,MAAW,SAAAT,GACpB,OACA,qBAAKC,UAAU,YAAf,SAEID,EAAMU,SAASC,KAAI,SAAAP,GAAG,OAClB,cAAC,EAAD,CAAmBA,IAAKA,GAAbA,EAAIC,WCNdO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACzC,OACA,uBACIb,UAAU,SACVc,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCmCCI,G,wDAtCb,aAAc,IAAD,8BACX,gBAOJJ,aAAe,SAAAK,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAPpC,EAAKC,MAAM,CACTd,SAAW,GACXW,YAAc,IAJL,E,gEAaQ,IAAD,OACpBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAWmB,S,+BAGhC,IAAD,EACuBC,KAAKN,MAA7Bd,EADC,EACDA,SAAUW,EADT,EACSA,YACZU,EAAcrB,EAASsB,QAAO,SAAA5B,GAAG,OACpCA,EAAIE,KAAK2B,cAAcC,SAASb,EAAYY,kBAE/C,OAEE,sBAAKhC,UAAU,MAAf,UACE,0CACI,cAAC,EAAD,CACAY,YAAY,kBACZC,aAAcgB,KAAKhB,eAEnB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAjCZI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.17e0bbb2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return(\r\n    <div className='card-container'>\r\n        <img alt='mns' src={`https://robohash.org/${props.svc.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.svc.name}</h2>  \r\n        <a href='{props.svc.email}'>{props.svc.email}</a>  \r\n    </div>\r\n    )\r\n};","import React from 'react';\r\nimport { Card } from '../Card/card.component'\r\nimport './card-list.styles.css';\r\n\r\nexport const Cardlist = props => {\r\n    return(\r\n    <div className='card-list'>\r\n        { \r\n        props.services.map(svc=>(\r\n            <Card key={svc.id} svc={svc}/>\r\n        ))\r\n        }     \r\n    </div>\r\n    )\r\n};","import React from 'react';\r\nimport './searchbox.styles.css';\r\n\r\nexport const SearchBox = ({ placeHolder, handleChange }) => {\r\nreturn(\r\n<input \r\n    className='search'\r\n    type='search' \r\n    placeholder={placeHolder}\r\n    onChange={handleChange} \r\n    />\r\n)   \r\n\r\n};\r\n","import React,{ Component } from 'react';\nimport { Cardlist } from './component/cardlist/card-list.component';\nimport { SearchBox } from './component/searchbox/searchbox.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      services : [],\n      searchfield : ''\n    }\n  }\n\nhandleChange = e =>{\n  this.setState({searchfield : e.target.value})\n}\n\n\n  componentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({ services : users}))\n  }\n\n  render() {\n  const { services, searchfield }=this.state;\n  const searchstate = services.filter(svc =>\n     svc.name.toLowerCase().includes(searchfield.toLowerCase())\n    );  \n  return (\n\n    <div className=\"App\">\n      <h1>Monsters</h1>\n          <SearchBox \n          placeHolder='Search Services' \n          handleChange={this.handleChange}\n          />  \n          <Cardlist services={searchstate} />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}